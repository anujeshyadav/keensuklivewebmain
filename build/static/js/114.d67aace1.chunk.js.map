{"version":3,"sources":["components/astrology/astromallList.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","components/astrology/autosearch.js"],"names":["AstromallList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","componentDidMount","axiosConfig","get","then","response","console","log","data","status","setState","procategory","catch","error","state","_createClass","key","value","this","React","createElement","LayoutOne","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","concat","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","Container","Row","Col","md","lg","AutoSearch","length","map","procat","index","Link","to","_id","src","img","alt","height","name","ReactHtmlParser","desc","Component","fn","cache","Object","create","arg","undefined","ReactSearchAutocomplete","items","id","onSearch","string","results","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","Fragment","display"],"mappings":"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","file":"static/js/114.d67aace1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport AutoSearch from \"./autosearch\";\nimport axiosConfig from \"../../axiosConfig\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\nclass AstromallList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      procategory: [],\n    };\n  }\n\n  componentDidMount = () => {\n    axiosConfig\n      .get(\"/admin/getproductcalegory\")\n      .then((response) => {\n        console.log(response.data.data);\n        if (response.data.status === true) {\n          this.setState({ procategory: response.data.data });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(error.response);\n      });\n  };\n  render() {\n    const { procategory } = this.state;\n    return (\n      <LayoutOne headerTop=\"visible\">\n        <section className=\"pt-0 pb-0\">\n          <div\n            className=\"\"\n            style={{\n              // backgroundColor: \"#FFD59E\",\n              // width: \"100%\",\n              // padding: \"70px 0px\",\n              // backgroundSize: \"cover\",\n              float: \"left\",\n              width: \"100%\",\n              backgroundColor: \"#272727\",\n              position: \"relative\",\n              backgroundAttachment: \"fixed\",\n              backgroundSize: \"cover\",\n              color: \"#ffffff\",\n              padding: \" 50px 0px 50px 0px\",\n              backgroundImage: `url(${astrologinbg})`,\n              backgroundPosition: \"center center\",\n              backgroundRepeat: \" no-repeat\",\n              textAlign: \"center\",\n            }}\n          >\n            <Container>\n              <Row>\n                <Col md=\"12\">\n                  <div className=\"leftcont text-left\">\n                    <h1>Astromall Shop</h1>\n                    <h3>Shop Best Online Astrology Products And Services</h3>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n\n        <section className=\"ptb-0\">\n          <Container>\n            <Row>\n              <Col lg=\"12\">\n                <div className=\"pt-10 pb-50\">\n                  <AutoSearch />\n                  <Row>\n                    {procategory.length\n                      ? procategory.map((procat, index) => {\n                          return (\n                            <Col key={index} md=\"4\">\n                              <div className=\"po-box\">\n                                <Link to={\"/productlist/\" + procat._id}>\n                                  <Row>\n                                    <Col md=\"4\">\n                                      <div className=\"po-1\">\n                                        <img\n                                          src={procat.img}\n                                          alt=\"\"\n                                          width=\"100%\"\n                                          height=\"80px\"\n                                        />\n                                      </div>\n                                    </Col>\n                                    <Col md=\"8\">\n                                      <div className=\"po-1\">\n                                        <h3>{procat.name}</h3>\n                                        <p>{ReactHtmlParser(procat.desc)}</p>\n                                      </div>\n                                    </Col>\n                                  </Row>\n                                </Link>\n                              </div>\n                            </Col>\n                          );\n                        })\n                      : null}\n                  </Row>\n                </div>\n              </Col>\n              <Col lg=\"6\"></Col>\n            </Row>\n          </Container>\n        </section>\n      </LayoutOne>\n    );\n  }\n}\n\nexport default AstromallList;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nexport default memoize;","import React from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction AutoSearch() {\n  // note: the id field is mandatory\n  const items = [\n    {\n      id: 0,\n      name: \"Cobol\",\n    },\n    {\n      id: 1,\n      name: \"JavaScript\",\n    },\n    {\n      id: 2,\n      name: \"Basic\",\n    },\n    {\n      id: 3,\n      name: \"PHP\",\n    },\n    {\n      id: 4,\n      name: \"Java\",\n    },\n  ];\n\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    console.log(string, results);\n  };\n\n  const handleOnHover = (result) => {\n    // the item hovered\n    console.log(result);\n  };\n\n  const handleOnSelect = (item) => {\n    // the item selected\n    console.log(item);\n  };\n\n  const handleOnFocus = () => {\n    console.log(\"Focused\");\n  };\n\n  const formatResult = (item) => {\n    return (\n      <>\n        <span style={{ display: \"block\", textAlign: \"left\" }}>\n          id: {item.id}\n        </span>\n        <span style={{ display: \"block\", textAlign: \"left\" }}>\n          name: {item.name}\n        </span>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"st-search\">\n          <ReactSearchAutocomplete\n            items={items}\n            onSearch={handleOnSearch}\n            onHover={handleOnHover}\n            onSelect={handleOnSelect}\n            onFocus={handleOnFocus}\n            autoFocus\n            formatResult={formatResult}\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default AutoSearch;\n"],"sourceRoot":""}