{"version":3,"sources":["components/WaitingPage/WaitingPageVideo.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","_ref","location","_useState","args","pathname","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","loader","setloader","history","useHistory","mylocation","useLocation","useEffect","localStorage","getItem","interval","setInterval","_mylocation$state","_mylocation$state2","JSON","parse","console","log","_id","id","sessionStorage","axiosConfig","get","concat","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data$data2","_res$data$data3","data","status","type","swal","clearInterval","push","catch","err","handlegetAcceptAstro","React","createElement","Fragment","LayoutOne","headerTop","Breadcrumb","style","padding","Container","className","class","Breadcrumbs","separator","NavLink","finalItem"],"mappings":"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","file":"static/js/123.1be23c25.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addToWishlist,\n  deleteFromWishlist,\n  deleteAllFromWishlist,\n} from \"../../redux/actions/wishlistActions\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport axiosConfig from \"../../axiosConfig\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nimport swal from \"sweetalert\";\n\nconst WaitingPageVideo = ({ location, args }) => {\n  const { pathname } = location;\n  const [order, setOrder] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [Refund, setRefund] = useState({});\n  const [loader, setloader] = useState(true);\n\n  const history = useHistory();\n  const mylocation = useLocation();\n  const toggle = () => setModal(!modal);\n  const fetchOrder = async () => {\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\n    const { data } = await axiosConfig.get(`/user/myOrders/${userid}`);\n    const order = data.data;\n    setOrder(order);\n    console.log(order);\n  };\n  const hanleopenmodal = (e, data) => {\n    e.preventDefault();\n    setRefund(data);\n    console.log(data);\n    toggle();\n  };\n\n  const handlegetAcceptAstro = () => {\n    const interval = setInterval(() => {\n      let userid = JSON.parse(localStorage.getItem(\"user_id\"));\n      console.log(mylocation.state?._id);\n      let id =\n        mylocation?.state?._id || sessionStorage.getItem(\"notificationdata\");\n      console.log(id);\n      axiosConfig\n        .get(`/user/getOnenotificationByastro/${id}`)\n        .then((res) => {\n          console.log(\"request status \", res.data.data);\n          console.log(\"notificationid\", res.data.data);\n          if (\n            res?.data?.data?.status === \"Accept\" &&\n            res?.data?.data?.type === \"Video\"\n          ) {\n            setloader(false);\n\n            swal(\"Request Accepted\", \"Wait Till Astro Joins Videocall\");\n            clearInterval(interval);\n            history.push(`/userVideoCall/${res.data.data?._id}`);\n\n            axiosConfig\n              .get(`/admin/dltNotificattion/${res.data.data?._id}`)\n              .then((res) => {\n                console.log(\"notification deleted\", res);\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          }\n        })\n        .catch((err) => {\n          // console.log(err);\n        });\n    }, 5000);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user_id\")) {\n      handlegetAcceptAstro();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <LayoutOne headerTop=\"visible\">\n        <Breadcrumb />\n        <section style={{ padding: \"180px 0px\" }}>\n          <Container>\n            {loader && (\n              <>\n                <div className=\"d-flex justify-content-center mb-4\">\n                  <div class=\"custom-loader\"></div>\n                </div>\n                <div className=\"d-flex justify-content-center align-item-center\">\n                  <h3>Wait Till Astrologer Accept Your Request...</h3>\n                  <h3>Do not Refresh Your Page...</h3>\n                </div>\n              </>\n            )}\n          </Container>\n        </section>\n      </LayoutOne>\n    </Fragment>\n  );\n};\n\nWaitingPageVideo.propTypes = {\n  addToCart: PropTypes.func,\n  cartItems: PropTypes.array,\n  currency: PropTypes.object,\n  location: PropTypes.object,\n  deleteAllFromWishlist: PropTypes.func,\n  deleteFromWishlist: PropTypes.func,\n  wishlistItems: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    currency: state.currencyData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addToCart: (item, addToast, quantityCount) => {\n      dispatch(addToCart(item, addToast, quantityCount));\n    },\n    addToWishlist: (item, addToast, quantityCount) => {\n      dispatch(addToWishlist(item, addToast, quantityCount));\n    },\n    deleteFromWishlist: (item, addToast, quantityCount) => {\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\n    },\n    deleteAllFromWishlist: (addToast) => {\n      dispatch(deleteAllFromWishlist(addToast));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WaitingPageVideo);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}