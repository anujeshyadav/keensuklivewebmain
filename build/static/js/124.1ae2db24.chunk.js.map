{"version":3,"sources":["components/WaitingPage/WaitingPageChat.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","location","intervalRef","args","useRef","pathname","useState","loader","setloader","history","useHistory","mylocation","useLocation","useEffect","localStorage","getItem","current","setInterval","console","log","_id","id","sessionStorage","axiosConfig","get","then","res","data","status","type","swal","clearInterval","push","catch","err","headerTop","style","padding","className","class","Breadcrumb","separator","NavLink","finalItem"],"mappings":"6PAwJeA,6BAzBS,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAME,SACjBC,cAAeH,EAAMI,aACrBC,SAAUL,EAAMM,iBAIO,SAACC,GAC1B,MAAO,CACLC,UAAW,SAACC,EAAMC,EAAUC,GAC1BJ,EAASC,YAAUC,EAAMC,EAAUC,KAErCC,cAAe,SAACH,EAAMC,EAAUC,GAC9BJ,EAASK,YAAcH,EAAMC,EAAUC,KAEzCE,mBAAoB,SAACJ,EAAMC,EAAUC,GACnCJ,EAASM,YAAmBJ,EAAMC,EAAUC,KAE9CG,sBAAuB,SAACJ,GACtBH,EAASO,YAAsBJ,QAKtBX,EAjIK,SAAH,GAA4B,IAAtBgB,EAAQ,EAARA,SACfC,GAD6B,EAAJC,KACXC,oBAEpB,GADqBH,EAAbI,SACkBC,mBAAS,KAAG,mBACtC,GADY,KAAU,KACMA,mBAAS,KAAG,mBACxC,GADa,KAAW,KACEA,oBAAS,IAAM,mBACzC,GADY,KAAU,KACMA,oBAAS,IAAK,mBAAnCC,EAAM,KAAEC,EAAS,KAElBC,EAAUC,uBACVC,EAAaC,wBA6DnB,OANAC,qBAAU,WACJC,aAAaC,QAAQ,aAtCzBb,EAAYc,QAAUC,aAAY,WAAO,IAAD,IAEtCC,QAAQC,IAAoB,QAAjB,EAACR,EAAWzB,aAAK,aAAhB,EAAkBkC,KAC9B,IAAIC,GACQ,OAAVV,QAAU,IAAVA,GAAiB,QAAP,EAAVA,EAAYzB,aAAK,WAAP,EAAV,EAAmBkC,MAAOE,eAAeP,QAAQ,oBACnDG,QAAQC,IAAIE,GACZE,IACGC,IAAI,mCAAD,OAAoCH,IACvCI,MAAK,SAACC,GAAS,IAAD,QAMX,EALFR,QAAQC,IAAI,oBAAqBO,EAAIC,KAAKA,MAC1CT,QAAQC,IAAI,eAAgBO,EAAIC,KAAKA,MAEP,YAAzB,OAAHD,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAM,QAAN,EAAT,EAAWA,YAAI,WAAZ,EAAH,EAAiBC,SACS,UAAvB,OAAHF,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKC,YAAI,OAAM,QAAN,EAAT,EAAWA,YAAI,WAAZ,EAAH,EAAiBE,QAEjBrB,GAAU,GACVsB,IAAK,sCACLC,cAAc7B,EAAYc,SAC1BP,EAAQuB,KAAK,YAEbT,IACGC,IAAI,2BAAD,OAAyC,QAAzC,EAA4BE,EAAIC,KAAKA,YAAI,aAAb,EAAeP,MAC9CK,MAAK,SAACC,GACLR,QAAQC,IAAI,uBAAwBO,MAGrCO,OAAM,SAACC,GACNhB,QAAQC,IAAIe,UAInBD,OAAM,SAACC,SAGT,QAOF,IAGD,kBAAC,WAAQ,KACP,kBAAC,IAAS,CAACC,UAAU,WACnB,kBAAC,IAAU,MACX,6BAASC,MAAO,CAAEC,QAAS,cACzB,kBAAC,IAAS,KACP9B,GACC,oCACE,yBAAK+B,UAAU,sCACb,yBAAKC,MAAM,mBAEb,yBAAKD,UAAU,mDACb,2EACA,qE,iCC1GlB,oCAoBeE,IAhBI,WACjB,OACE,yBAAKF,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,kBAAC,cAAW,CACVG,UAAW,mCACX9C,KAAM+C,IACNC,UAAW","file":"static/js/124.1ae2db24.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst Waitingpage = ({ location, args }) => {\r\n  const intervalRef = useRef();\r\n  const { pathname } = location;\r\n  const [order, setOrder] = useState([]);\r\n  const [Refund, setRefund] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [loader, setloader] = useState(true);\r\n\r\n  const history = useHistory();\r\n  const mylocation = useLocation();\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const fetchOrder = async () => {\r\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    const { data } = await axiosConfig.get(`/user/myOrders/${userid}`);\r\n    const order = data.data;\r\n    setOrder(order);\r\n    console.log(order);\r\n  };\r\n  const hanleopenmodal = (e, data) => {\r\n    e.preventDefault();\r\n    setRefund(data);\r\n    console.log(data);\r\n    toggle();\r\n  };\r\n\r\n  const handlegetAcceptAstro = () => {\r\n    intervalRef.current = setInterval(() => {\r\n      // let userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n      console.log(mylocation.state?._id);\r\n      let id =\r\n        mylocation?.state?._id || sessionStorage.getItem(\"notificationdata\");\r\n      console.log(id);\r\n      axiosConfig\r\n        .get(`/user/getOnenotificationByastro/${id}`)\r\n        .then((res) => {\r\n          console.log(\"request for chat \", res.data.data);\r\n          console.log(\"notification\", res.data.data);\r\n          if (\r\n            res?.data?.data?.status === \"Accept\" &&\r\n            res?.data?.data?.type === \"Chat\"\r\n          ) {\r\n            setloader(false);\r\n            swal(\"Astro is now Accepted Your Request\");\r\n            clearInterval(intervalRef.current);\r\n            history.push(\"/chatApp\");\r\n\r\n            axiosConfig\r\n              .get(`/admin/dltNotificattion/${res.data.data?._id}`)\r\n              .then((res) => {\r\n                console.log(\"notification deleted\", res);\r\n                // clearInterval(intervalRef.current);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err);\r\n        });\r\n    }, 5000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user_id\")) {\r\n      handlegetAcceptAstro();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LayoutOne headerTop=\"visible\">\r\n        <Breadcrumb />\r\n        <section style={{ padding: \"180px 0px\" }}>\r\n          <Container>\r\n            {loader && (\r\n              <>\r\n                <div className=\"d-flex justify-content-center mb-4\">\r\n                  <div class=\"custom-loader\"></div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center align-item-center\">\r\n                  <h3>Wait Till Astrologer Accept Your Request...</h3>\r\n                  <h3>Do not Refresh Your Page...</h3>\r\n                </div>\r\n              </>\r\n            )}\r\n          </Container>\r\n        </section>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nWaitingpage.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteAllFromWishlist: PropTypes.func,\r\n  deleteFromWishlist: PropTypes.func,\r\n  wishlistItems: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    currency: state.currencyData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    addToWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(addToWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteFromWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteAllFromWishlist: (addToast) => {\r\n      dispatch(deleteAllFromWishlist(addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Waitingpage);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}