{"version":3,"sources":["components/WaitingPage/WaitingPageChat.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","_ref","location","intervalRef","args","useRef","_useState","pathname","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","loader","setloader","history","useHistory","mylocation","useLocation","useEffect","localStorage","getItem","current","setInterval","_mylocation$state","_mylocation$state2","console","log","_id","id","sessionStorage","axiosConfig","get","concat","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data$data2","data","status","type","swal","clearInterval","push","catch","err","React","createElement","Fragment","LayoutOne","headerTop","Breadcrumb","style","padding","Container","className","class","Breadcrumbs","separator","NavLink","finalItem"],"mappings":"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","file":"static/js/124.a381d5fc.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {\n  addToWishlist,\n  deleteFromWishlist,\n  deleteAllFromWishlist,\n} from \"../../redux/actions/wishlistActions\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport axiosConfig from \"../../axiosConfig\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\nconst Waitingpage = ({ location, args }) => {\n  const intervalRef = useRef();\n  const { pathname } = location;\n  const [order, setOrder] = useState([]);\n  const [Refund, setRefund] = useState({});\n  const [modal, setModal] = useState(false);\n  const [loader, setloader] = useState(true);\n\n  const history = useHistory();\n  const mylocation = useLocation();\n\n  const toggle = () => setModal(!modal);\n  const fetchOrder = async () => {\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\n    const { data } = await axiosConfig.get(`/user/myOrders/${userid}`);\n    const order = data.data;\n    setOrder(order);\n    console.log(order);\n  };\n  const hanleopenmodal = (e, data) => {\n    e.preventDefault();\n    setRefund(data);\n    console.log(data);\n    toggle();\n  };\n\n  const handlegetAcceptAstro = () => {\n    intervalRef.current = setInterval(() => {\n      // let userid = JSON.parse(localStorage.getItem(\"user_id\"));\n      console.log(mylocation.state?._id);\n      let id =\n        mylocation?.state?._id || sessionStorage.getItem(\"notificationdata\");\n      console.log(id);\n      axiosConfig\n        .get(`/user/getOnenotificationByastro/${id}`)\n        .then((res) => {\n          console.log(\"request for chat \", res.data.data);\n          console.log(\"notification\", res.data.data);\n          if (\n            res?.data?.data?.status === \"Accept\" &&\n            res?.data?.data?.type === \"Chat\"\n          ) {\n            setloader(false);\n            swal(\"Astro is now Accepted Your Request\");\n            clearInterval(intervalRef.current);\n            history.push(\"/chatApp\");\n\n            axiosConfig\n              .get(`/admin/dltNotificattion/${res.data.data?._id}`)\n              .then((res) => {\n                console.log(\"notification deleted\", res);\n                // clearInterval(intervalRef.current);\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          }\n        })\n        .catch((err) => {\n          // console.log(err);\n        });\n    }, 5000);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user_id\")) {\n      handlegetAcceptAstro();\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      <LayoutOne headerTop=\"visible\">\n        <Breadcrumb />\n        <section style={{ padding: \"180px 0px\" }}>\n          <Container>\n            {loader && (\n              <>\n                <div className=\"d-flex justify-content-center mb-4\">\n                  <div class=\"custom-loader\"></div>\n                </div>\n                <div className=\"d-flex justify-content-center align-item-center\">\n                  <h3>Wait Till Astrologer Accept Your Request...</h3>\n                  <h3>Do not Refresh Your Page...</h3>\n                </div>\n              </>\n            )}\n          </Container>\n        </section>\n      </LayoutOne>\n    </Fragment>\n  );\n};\n\nWaitingpage.propTypes = {\n  addToCart: PropTypes.func,\n  cartItems: PropTypes.array,\n  currency: PropTypes.object,\n  location: PropTypes.object,\n  deleteAllFromWishlist: PropTypes.func,\n  deleteFromWishlist: PropTypes.func,\n  wishlistItems: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    currency: state.currencyData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addToCart: (item, addToast, quantityCount) => {\n      dispatch(addToCart(item, addToast, quantityCount));\n    },\n    addToWishlist: (item, addToast, quantityCount) => {\n      dispatch(addToWishlist(item, addToast, quantityCount));\n    },\n    deleteFromWishlist: (item, addToast, quantityCount) => {\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\n    },\n    deleteAllFromWishlist: (addToast) => {\n      dispatch(deleteAllFromWishlist(addToast));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Waitingpage);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}