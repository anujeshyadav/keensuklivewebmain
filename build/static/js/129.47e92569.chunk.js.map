{"version":3,"sources":["components/astrology/userVideoCall.js","components/astrology/AlertPage.js"],"names":["userVideoCall","_React$Component","_inherits","_super","_createSuper","props","_this$callbacks","_this","_classCallCheck","call","formatTime","timer","getSeconds","concat","slice","minutes","Math","floor","getMinutes","getHours","handlestartinterval","apicall","current","setInterval","Fetchuserdetail","JSON","parse","localStorage","getItem","sessionStorage","setItem","handleStart","setState","setIsPaused","setTimer","state","handlePause","clearInterval","countRef","rtcProps","appId","channel","token","userVideocalltoken","uid","callbacks","_defineProperty","user","Loader","swal","value","userId","astroId","axiosConfig","post","then","res","console","log","data","history","push","catch","err","response","setVideoCall","React","createRef","hours","seconds","stream","changeView","userid","astroid","mobile","userData","toggle","_createClass","key","_this2","userchannel_name","this","userchannelname","usertoken","payload","userAccount","astroAccount","_res$data","_res$data2","_res$data3","channelName","get","error","createElement","LayoutOne","headerTop","Fragment","className","Row","Col","style","display","width","height","AgoraUIKit","AlertPage","Component","videocallreview","Container","md","ClassName","Link","to"],"mappings":"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","file":"static/js/129.47e92569.chunk.js","sourcesContent":["import { Container, Row, Col, Button, Input, Alert, Spinner } from \"reactstrap\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport React from \"react\";\nimport AgoraUIKit from \"agora-react-uikit\";\nimport axiosConfig from \"../../axiosConfig\";\nimport swal from \"sweetalert\";\nimport AlertPage from \"./AlertPage\";\nimport { Fetchuserdetail } from \"../header/IconGroup\";\n\nclass userVideoCall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.countRef = React.createRef();\n    this.apicall = React.createRef();\n\n    this.state = {\n      setTimer: 0,\n      Loader: true,\n      setIsPaused: false,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      stream: null,\n      changeView: false,\n      userid: \"\",\n      astroid: \"\",\n      mobile: \"\",\n      userData: {},\n      data: [],\n      setVideoCall: false,\n      toggle: true,\n      userVideocalltoken: \"\",\n    };\n  }\n\n  formatTime = (timer) => {\n    const getSeconds = `0${timer % 60}`.slice(-2);\n    const minutes = `${Math.floor(timer / 60)}`;\n    const getMinutes = `0${minutes % 60}`.slice(-2);\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\n  };\n\n  handlestartinterval = () => {\n    this.apicall.current = setInterval(() => {\n      Fetchuserdetail();\n\n      let userId = JSON.parse(localStorage.getItem(\"user_id\"));\n      let astroId = localStorage.getItem(\"videoCallAstro_id\");\n      sessionStorage.setItem(\"typeofcall\", \"videocall\");\n\n      // let payload = {\n      //   userId: userId,\n      //   astroId: astroId,\n      // };\n      // axiosConfig\n      //   .post(`/user/deductChatBalance`, payload)\n      //   .then((res) => {\n      //     console.log(\"callduration\", res);\n      //     if (res.status === 203) {\n      //       console.log(\"callduration\", res.status === 203);\n      //       clearInterval(this.countRef.current);\n      //       clearInterval(this.apicall.current);\n      //       this.setState({ setIsPaused: false });\n      //       this.setState({ setVideoCall: false });\n      //       swal(\n      //         \"Low Balance\",\n      //         \"Your Balance is getting low As per minimum charge of this Astrologer\",\n      //         {\n      //           buttons: {\n      //             catch: { text: \"Cancel \", value: \"catch\" },\n      //             // recharge: { text: \"Recharge NOW \", value: \"Recharge\" },\n      //           },\n      //         }\n      //       ).then((value) => {\n      //         switch (value) {\n      //           case \"catch\":\n      //             // this.props.history.push(\"/\");\n      //             break;\n      //           case \"Recharge\":\n      //             swal(\"move to recharge \");\n      //             break;\n      //           default:\n      //         }\n      //       });\n      //     }\n      //     // for low balance\n      //     if (res.status === 404) {\n      //       console.log(\"callduration\", res.status === 404);\n      //       clearInterval(this.countRef.current);\n      //       clearInterval(this.apicall.current);\n      //       this.setState({ setIsPaused: false });\n      //       this.setState({ setVideoCall: false });\n      //     }\n      //     // move to another page no balance\n      //   })\n      //   .catch((err) => {\n      //     console.log(err.response.data.message);\n      //   });\n    }, 60000);\n  };\n\n  handleStart = () => {\n    this.setState({ setIsPaused: true });\n    setInterval(() => {\n      this.setState({ setTimer: this.state.setTimer + 1 });\n    }, 1000);\n  };\n\n  handlePause = () => {\n    clearInterval(this.countRef.current);\n    clearInterval(this.apicall.current);\n    this.setState({ setIsPaused: false });\n  };\n\n  componentDidMount() {\n    const userchannel_name = localStorage.getItem(\"userchannel_name\");\n    this.setState({ userchannelname: userchannel_name });\n    const usertoken_for_videocall = localStorage.getItem(\n      \"usertoken_for_videocall\"\n    );\n    this.setState({ usertoken: userchannel_name });\n    const userid = JSON.parse(localStorage.getItem(\"user_id\"));\n    const callingastro_id = localStorage.getItem(\"videoCallAstro_id\");\n    // api for token generation\n    const payload = {\n      userAccount: userid,\n      astroAccount: callingastro_id,\n    };\n    axiosConfig\n      .post(`/user/userVideoCall`, payload)\n      .then((res) => {\n        this.setState({ userVideocalltoken: res?.data?.userAccount });\n        localStorage.setItem(\"usertoken_for_videocall\", res?.data?.userAccount);\n        localStorage.setItem(\"userchannel_name\", res?.data?.channelName);\n        this.setState({ changeView: true });\n        this.setState({ setVideoCall: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axiosConfig\n      .get(`/user/viewoneuser/${userid}`)\n      .then((response) => {\n        console.log(\"videocal\", response);\n        this.setState({ mobile: response.data.data.mobile });\n        this.setState({ userData: response.data.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  //   changeHandler = (e) => {\n  //     this.setState({ [e.target.name]: e.target.value });\n  //   };\n\n  rtcProps = {\n    // Pass your App ID here.\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\n    // Set the channel name.\n\n    channel: localStorage.getItem(\"userchannel_name\"),\n    // Pass your temp token here.\n    token:\n      localStorage.getItem(\"usertoken_for_videocall\") ||\n      this.state.userVideocalltoken,\n\n    // Set the user ID.\n    uid: 1,\n    // Set the user role\n    // role: \"\",\n    // layout:\"\",\n  };\n\n  callbacks = {\n    [\"user-joined\"]: (user) => {\n      if (user) {\n        this.handleStart();\n        this.handlestartinterval();\n        this.setState({ Loader: false });\n        swal(\"Astrologer Joined\");\n      }\n    },\n\n    [\"user-left\"]: (user) => {\n      if (user) {\n        sessionStorage.setItem(\"typeofcall\", \"Videocall\");\n        this.handlePause();\n        clearInterval(this.apicall.current);\n        swal(\"Astro leave the Videocall\");\n        let userid = localStorage.getItem(\"user_id\");\n        const astroId = localStorage.getItem(\"astroId\");\n        let value = {\n          userId: userid,\n          astroId: astroId,\n        };\n        axiosConfig\n          .post(`/user/changeStatus`, value)\n          .then((res) => {\n            console.log(res.data);\n            this.props.history.push(\"/astrorating\");\n          })\n          .catch((err) => {\n            console.log(err.response);\n          });\n      }\n    },\n    EndCall: () => {\n      this.setState({ setVideoCall: false });\n      this.handlePause();\n      clearInterval(this.apicall.current);\n      sessionStorage.setItem(\"typeofcall\", \"Videocall\");\n      let userid = localStorage.getItem(\"user_id\");\n\n      const astroId = localStorage.getItem(\"astroId\");\n      let value = {\n        userId: userid,\n        astroId: astroId,\n      };\n      axiosConfig\n        .post(`/user/changeStatus`, value)\n        .then((res) => {\n          console.log(res.data);\n          this.props.history.push(\"/astrorating\");\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    },\n  };\n\n  render() {\n    return (\n      <LayoutOne headerTop=\"visible\">\n        <>\n          {this.state.Loader ? (\n            <>\n              <div className=\"d-flex justify-content-center\">\n                <h2 className=\"mt-5\">Wait Till Astrologer Joins Room...</h2>\n              </div>\n            </>\n          ) : null}\n\n          <>\n            {this.state.changeView === true ? (\n              <>\n                <section>\n                  {this.state.setVideoCall === true ? (\n                    <>\n                      <Row>\n                        <Col className=\"d-flex justify-content-center\">\n                          <p>\n                            {this.state.Loader ? null : (\n                              <>{this.formatTime(this.state.setTimer)}</>\n                            )}\n                          </p>\n                        </Col>\n                      </Row>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          width: \"90vw\",\n                          height: \"80vh\",\n                        }}\n                      >\n                        <AgoraUIKit\n                          rtcProps={this.rtcProps}\n                          callbacks={this.callbacks}\n                        />\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      {\" \"}\n                      <AlertPage />\n                    </>\n                  )}\n                </section>\n              </>\n            ) : null}\n          </>\n        </>\n      </LayoutOne>\n    );\n  }\n}\nexport default userVideoCall;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  Form,\n  Button,\n} from \"reactstrap\";\nimport textbottom from \"../../assets/img/textbottom.png\";\n// import aboutimg from \"../../assets/img/aboutimg.jpg\";\n\nclass AlertPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  videocallreview = () => {\n    // this.props.history.push(\"/astrorating\");\n    console.log(\"object\");\n\n    sessionStorage.setItem(\"typeofcall\", \"videocall\");\n  };\n\n  render() {\n    return (\n      <div className=\"col-lg-12 col-md-12 mb-30 container\">\n        <div className=\"category-home\">\n          <section>\n            <Container>\n              <Row>\n                <Col md=\"12\">\n                  <div className=\"content\">\n                    <div ClassName=\"wrap-1\">\n                      <div className=\"wrap-2\">\n                        <h1 className=\"animate-charcter\">Thank you !</h1>\n                        <p>\n                          Thank you for being our valued customer.<br></br> We\n                          are so grateful and hope we met your expectations.{\" \"}\n                        </p>\n                        <Link to=\"/\">\n                          <button className=\"go-home\">Go to Home</button>\n                        </Link>\n                        <Link to=\"/astrorating\">\n                          <button\n                            // onClick={() => this.videocallreview}\n                            className=\"go-home\"\n                          >\n                            Add Review\n                          </button>\n                        </Link>\n                      </div>\n                      {/* <div className=\"footer-like\">\n                        <p>\n                          Email not received?\n                          <a href=\"#\">Click here to send again</a>\n                        </p>\n                      </div> */}\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AlertPage;\n"],"sourceRoot":""}