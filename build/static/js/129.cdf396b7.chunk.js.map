{"version":3,"sources":["components/astrology/userVideoCall.js","components/astrology/AlertPage.js"],"names":["userVideoCall","props","formatTime","timer","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","handlestartinterval","apicall","current","setInterval","Fetchuserdetail","JSON","parse","localStorage","getItem","sessionStorage","setItem","handleStart","setState","setIsPaused","setTimer","state","handlePause","clearInterval","countRef","rtcProps","appId","channel","token","userVideocalltoken","uid","callbacks","user","Loader","swal","value","userId","astroId","axiosConfig","post","then","res","console","log","data","history","push","catch","err","response","setVideoCall","React","createRef","hours","seconds","stream","changeView","userid","astroid","mobile","userData","toggle","userchannel_name","this","userchannelname","usertoken","payload","userAccount","astroAccount","channelName","get","error","headerTop","className","style","display","width","height","Component","AlertPage","videocallreview","md","ClassName","to"],"mappings":"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","file":"static/js/129.cdf396b7.chunk.js","sourcesContent":["import { Container, Row, Col, Button, Input, Alert, Spinner } from \"reactstrap\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport React from \"react\";\r\nimport AgoraUIKit from \"agora-react-uikit\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport AlertPage from \"./AlertPage\";\r\nimport { Fetchuserdetail } from \"../header/IconGroup\";\r\n\r\nclass userVideoCall extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.countRef = React.createRef();\r\n    this.apicall = React.createRef();\r\n\r\n    this.state = {\r\n      setTimer: 0,\r\n      Loader: true,\r\n      setIsPaused: false,\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      stream: null,\r\n      changeView: false,\r\n      userid: \"\",\r\n      astroid: \"\",\r\n      mobile: \"\",\r\n      userData: {},\r\n      data: [],\r\n      setVideoCall: false,\r\n      toggle: true,\r\n      userVideocalltoken: \"\",\r\n    };\r\n  }\r\n\r\n  formatTime = (timer) => {\r\n    const getSeconds = `0${timer % 60}`.slice(-2);\r\n    const minutes = `${Math.floor(timer / 60)}`;\r\n    const getMinutes = `0${minutes % 60}`.slice(-2);\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\r\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\r\n  };\r\n\r\n  handlestartinterval = () => {\r\n    this.apicall.current = setInterval(() => {\r\n      Fetchuserdetail();\r\n\r\n      let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n      let astroId = localStorage.getItem(\"videoCallAstro_id\");\r\n      sessionStorage.setItem(\"typeofcall\", \"videocall\");\r\n\r\n      // let payload = {\r\n      //   userId: userId,\r\n      //   astroId: astroId,\r\n      // };\r\n      // axiosConfig\r\n      //   .post(`/user/deductChatBalance`, payload)\r\n      //   .then((res) => {\r\n      //     console.log(\"callduration\", res);\r\n      //     if (res.status === 203) {\r\n      //       console.log(\"callduration\", res.status === 203);\r\n      //       clearInterval(this.countRef.current);\r\n      //       clearInterval(this.apicall.current);\r\n      //       this.setState({ setIsPaused: false });\r\n      //       this.setState({ setVideoCall: false });\r\n      //       swal(\r\n      //         \"Low Balance\",\r\n      //         \"Your Balance is getting low As per minimum charge of this Astrologer\",\r\n      //         {\r\n      //           buttons: {\r\n      //             catch: { text: \"Cancel \", value: \"catch\" },\r\n      //             // recharge: { text: \"Recharge NOW \", value: \"Recharge\" },\r\n      //           },\r\n      //         }\r\n      //       ).then((value) => {\r\n      //         switch (value) {\r\n      //           case \"catch\":\r\n      //             // this.props.history.push(\"/\");\r\n      //             break;\r\n      //           case \"Recharge\":\r\n      //             swal(\"move to recharge \");\r\n      //             break;\r\n      //           default:\r\n      //         }\r\n      //       });\r\n      //     }\r\n      //     // for low balance\r\n      //     if (res.status === 404) {\r\n      //       console.log(\"callduration\", res.status === 404);\r\n      //       clearInterval(this.countRef.current);\r\n      //       clearInterval(this.apicall.current);\r\n      //       this.setState({ setIsPaused: false });\r\n      //       this.setState({ setVideoCall: false });\r\n      //     }\r\n      //     // move to another page no balance\r\n      //   })\r\n      //   .catch((err) => {\r\n      //     console.log(err.response.data.message);\r\n      //   });\r\n    }, 60000);\r\n  };\r\n\r\n  handleStart = () => {\r\n    this.setState({ setIsPaused: true });\r\n    setInterval(() => {\r\n      this.setState({ setTimer: this.state.setTimer + 1 });\r\n    }, 1000);\r\n  };\r\n\r\n  handlePause = () => {\r\n    clearInterval(this.countRef.current);\r\n    clearInterval(this.apicall.current);\r\n    this.setState({ setIsPaused: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userchannel_name = localStorage.getItem(\"userchannel_name\");\r\n    this.setState({ userchannelname: userchannel_name });\r\n    const usertoken_for_videocall = localStorage.getItem(\r\n      \"usertoken_for_videocall\"\r\n    );\r\n    this.setState({ usertoken: userchannel_name });\r\n    const userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    const callingastro_id = localStorage.getItem(\"videoCallAstro_id\");\r\n    // api for token generation\r\n    const payload = {\r\n      userAccount: userid,\r\n      astroAccount: callingastro_id,\r\n    };\r\n    axiosConfig\r\n      .post(`/user/userVideoCall`, payload)\r\n      .then((res) => {\r\n        this.setState({ userVideocalltoken: res?.data?.userAccount });\r\n        localStorage.setItem(\"usertoken_for_videocall\", res?.data?.userAccount);\r\n        localStorage.setItem(\"userchannel_name\", res?.data?.channelName);\r\n        this.setState({ changeView: true });\r\n        this.setState({ setVideoCall: true });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axiosConfig\r\n      .get(`/user/viewoneuser/${userid}`)\r\n      .then((response) => {\r\n        console.log(\"videocal\", response);\r\n        this.setState({ mobile: response.data.data.mobile });\r\n        this.setState({ userData: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n\r\n  rtcProps = {\r\n    // Pass your App ID here.\r\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\r\n    // Set the channel name.\r\n\r\n    channel: localStorage.getItem(\"userchannel_name\"),\r\n    // Pass your temp token here.\r\n    token:\r\n      localStorage.getItem(\"usertoken_for_videocall\") ||\r\n      this.state.userVideocalltoken,\r\n\r\n    // Set the user ID.\r\n    uid: 1,\r\n    // Set the user role\r\n    // role: \"\",\r\n    // layout:\"\",\r\n  };\r\n\r\n  callbacks = {\r\n    [\"user-joined\"]: (user) => {\r\n      if (user) {\r\n        this.handleStart();\r\n        this.handlestartinterval();\r\n        this.setState({ Loader: false });\r\n        swal(\"Astrologer Joined\");\r\n      }\r\n    },\r\n\r\n    [\"user-left\"]: (user) => {\r\n      if (user) {\r\n        sessionStorage.setItem(\"typeofcall\", \"Videocall\");\r\n        this.handlePause();\r\n        clearInterval(this.apicall.current);\r\n        swal(\"Astro leave the Videocall\");\r\n        let userid = localStorage.getItem(\"user_id\");\r\n        const astroId = localStorage.getItem(\"astroId\");\r\n        let value = {\r\n          userId: userid,\r\n          astroId: astroId,\r\n        };\r\n        axiosConfig\r\n          .post(`/user/changeStatus`, value)\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            this.props.history.push(\"/astrorating\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n          });\r\n      }\r\n    },\r\n    EndCall: () => {\r\n      this.setState({ setVideoCall: false });\r\n      this.handlePause();\r\n      clearInterval(this.apicall.current);\r\n      sessionStorage.setItem(\"typeofcall\", \"Videocall\");\r\n      let userid = localStorage.getItem(\"user_id\");\r\n\r\n      const astroId = localStorage.getItem(\"astroId\");\r\n      let value = {\r\n        userId: userid,\r\n        astroId: astroId,\r\n      };\r\n      axiosConfig\r\n        .post(`/user/changeStatus`, value)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.props.history.push(\"/astrorating\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <>\r\n          {this.state.Loader ? (\r\n            <>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <h2 className=\"mt-5\">Wait Till Astrologer Joins Room...</h2>\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          <>\r\n            {this.state.changeView === true ? (\r\n              <>\r\n                <section>\r\n                  {this.state.setVideoCall === true ? (\r\n                    <>\r\n                      <Row>\r\n                        <Col className=\"d-flex justify-content-center\">\r\n                          <p>\r\n                            {this.state.Loader ? null : (\r\n                              <>{this.formatTime(this.state.setTimer)}</>\r\n                            )}\r\n                          </p>\r\n                        </Col>\r\n                      </Row>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          width: \"90vw\",\r\n                          height: \"80vh\",\r\n                        }}\r\n                      >\r\n                        <AgoraUIKit\r\n                          rtcProps={this.rtcProps}\r\n                          callbacks={this.callbacks}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <AlertPage />\r\n                    </>\r\n                  )}\r\n                </section>\r\n              </>\r\n            ) : null}\r\n          </>\r\n        </>\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\nexport default userVideoCall;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  Form,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport textbottom from \"../../assets/img/textbottom.png\";\r\n// import aboutimg from \"../../assets/img/aboutimg.jpg\";\r\n\r\nclass AlertPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  videocallreview = () => {\r\n    // this.props.history.push(\"/astrorating\");\r\n    console.log(\"object\");\r\n\r\n    sessionStorage.setItem(\"typeofcall\", \"videocall\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 mb-30 container\">\r\n        <div className=\"category-home\">\r\n          <section>\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"content\">\r\n                    <div ClassName=\"wrap-1\">\r\n                      <div className=\"wrap-2\">\r\n                        <h1 className=\"animate-charcter\">Thank you !</h1>\r\n                        <p>\r\n                          Thank you for being our valued customer.<br></br> We\r\n                          are so grateful and hope we met your expectations.{\" \"}\r\n                        </p>\r\n                        <Link to=\"/\">\r\n                          <button className=\"go-home\">Go to Home</button>\r\n                        </Link>\r\n                        <Link to=\"/astrorating\">\r\n                          <button\r\n                            // onClick={() => this.videocallreview}\r\n                            className=\"go-home\"\r\n                          >\r\n                            Add Review\r\n                          </button>\r\n                        </Link>\r\n                      </div>\r\n                      {/* <div className=\"footer-like\">\r\n                        <p>\r\n                          Email not received?\r\n                          <a href=\"#\">Click here to send again</a>\r\n                        </p>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertPage;\r\n"],"sourceRoot":""}