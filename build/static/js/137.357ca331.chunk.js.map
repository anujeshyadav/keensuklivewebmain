{"version":3,"sources":["../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","components/astrology/MatchSearch.js"],"names":["memoize","fn","cache","Object","create","arg","undefined","MatchSearch","React","createElement","className","ReactSearchAutocomplete","items","id","name","onSearch","string","results","console","log","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","Fragment","style","display","textAlign"],"mappings":"oHAAA,SAASA,EAAQC,GACf,IAAIC,EAAQC,OAAOC,OAAO,MAC1B,OAAO,SAAUC,GAEf,YADmBC,IAAfJ,EAAMG,KAAoBH,EAAMG,GAAOJ,EAAGI,IACvCH,EAAMG,IAJjB,mC,iCCAA,oCA4EeE,UAzEf,WAsDE,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAACE,0BAAuB,CACtBC,MAzDI,CACZ,CACEC,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,cAER,CACED,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,OAER,CACED,GAAI,EACJC,KAAM,SAuCAC,SAnCa,SAACC,EAAQC,GAG9BC,QAAQC,IAAIH,EAAQC,IAiCZG,QA9BY,SAACC,GAErBH,QAAQC,IAAIE,IA6BJC,SA1Ba,SAACC,GAEtBL,QAAQC,IAAII,IAyBJC,QAtBY,WACpBN,QAAQC,IAAI,YAsBJM,WAAS,EACTC,aApBW,SAACH,GACpB,OACEf,IAAAC,cAAAD,IAAAmB,SAAA,KACEnB,IAAAC,cAAA,QAAMmB,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAU,OAAKP,EAAKV,IAChEL,IAAAC,cAAA,QAAMmB,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAU,SAAOP,EAAKT","file":"static/js/137.357ca331.chunk.js","sourcesContent":["function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nexport { memoize as default };","import React from 'react'\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\n\nfunction MatchSearch() {\n  // note: the id field is mandatory\n  const items = [\n    {\n      id: 0,\n      name: 'Cobol'\n    },\n    {\n      id: 1,\n      name: 'JavaScript'\n    },\n    {\n      id: 2,\n      name: 'Basic'\n    },\n    {\n      id: 3,\n      name: 'PHP'\n    },\n    {\n      id: 4,\n      name: 'Java'\n    }\n  ]\n\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    console.log(string, results)\n  }\n\n  const handleOnHover = (result) => {\n    // the item hovered\n    console.log(result)\n  }\n\n  const handleOnSelect = (item) => {\n    // the item selected\n    console.log(item)\n  }\n\n  const handleOnFocus = () => {\n    console.log('Focused')\n  }\n\n  const formatResult = (item) => {\n    return (\n      <>\n        <span style={{ display: 'block', textAlign: 'left' }}>id: {item.id}</span>\n        <span style={{ display: 'block', textAlign: 'left' }}>name: {item.name}</span>\n      </>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"mst-serch\">\n          <ReactSearchAutocomplete\n            items={items}\n            onSearch={handleOnSearch}\n            onHover={handleOnHover}\n            onSelect={handleOnSelect}\n            onFocus={handleOnFocus}\n            autoFocus\n            formatResult={formatResult}\n          />\n        </div>\n      </header>\n    </div>\n  )\n}\n\nexport default MatchSearch\n  \n\n"],"sourceRoot":""}