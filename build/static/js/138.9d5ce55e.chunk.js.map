{"version":3,"sources":["components/astrology/YourliveStreamone.js","../node_modules/reactstrap/es/Card.js"],"names":["YourliveStreamone","_ref","props","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","location","useLocation","callbacks","EndCall","window","reload","useEffect","console","log","state","userId","JSON","parse","localStorage","getItem","astroid","livetkn","astroAccount","userAccount","axiosConfig","post","then","res","catch","err","React","createElement","LayoutOne","headerTop","Card","className","Row","style","display","width","height","AgoraUIKit","rtcProps","appId","channel","token","role","_excluded","propTypes","tag","inverse","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Tag","attributes","classes","ref","defaultProps"],"mappings":"4MAuIeA,UA5Hf,SAA0BC,GAAQA,EAALC,MAAU,IACrCC,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GACjDI,GADgBF,EAAA,GAAcA,EAAA,GACJD,mBAAS,KAAGI,EAAAF,YAAAC,EAAA,GACtCE,GADYD,EAAA,GAAUA,EAAA,GACgBJ,mBAAS,KAAGM,EAAAJ,YAAAG,EAAA,GAClDE,GADkBD,EAAA,GAAgBA,EAAA,GACRN,mBAAS,KAAGQ,EAAAN,YAAAK,EAAA,GACtCE,GADYD,EAAA,GAAUA,EAAA,GACQR,oBAAS,IAAMU,EAAAR,YAAAO,EAAA,GAEvCE,GAFQD,EAAA,GAAYA,EAAA,GAETE,yBAmBXC,EAAY,CAChBC,QAAS,WACPC,OAAOJ,SAASK,WA+EpB,OA/BAC,qBAAU,WACRC,QAAQC,IAAIR,EAASS,OACrB,IAAIC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,YACvCC,EAAUF,aAAaC,QAAQ,WACrCP,QAAQC,IAAIO,GACZ,IAAIC,EAAU,CACZC,aAAcF,EACdG,YAAaR,GAEfS,IACGC,KAAK,8BAA+BJ,GACpCK,MAAK,SAACC,GACLf,QAAQC,IAAIc,MAMbC,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,QAWf,IAEDC,IAAAC,cAAA,WACED,IAAAC,cAACC,IAAS,CAACC,UAAU,WACnBH,IAAAC,cAACG,IAAI,CAACC,UAAU,aACdL,IAAAC,cAACK,IAAG,KACFN,IAAAC,cAAA,OAAKI,UAAU,uBACbL,IAAAC,cAAA,OAAKM,MAAO,CAAEC,QAAS,OAAQC,MAAO,QAASC,OAAQ,SACrDV,IAAAC,cAACU,IAAU,CAACC,SAzGT,CAEfC,MAAO,mCAKPC,QAAS,mBAGTC,MACE,sJAIFC,KAAM,YA0FsCvC,UAAWA,Y,iCC7H3D,4EAEIwC,EAAY,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,YAKrFC,EAAY,CACdC,IAAK,IACLC,QAAS,IAAUC,KACnBC,MAAO,IAAUC,OACjBC,KAAM,IAAUH,KAChBI,QAAS,IAAUJ,KACnBhB,UAAW,IAAUkB,OACrBG,UAAW,IAAUC,OACrBC,SAAU,IAAUC,UAAU,CAAC,IAAUF,OAAQ,IAAUJ,OAAQ,IAAUO,QAK3E1B,EAAO,SAAc1C,GACvB,IAAI2C,EAAY3C,EAAM2C,UACpBqB,EAAYhE,EAAMgE,UAClBJ,EAAQ5D,EAAM4D,MACdE,EAAO9D,EAAM8D,KACbJ,EAAU1D,EAAM0D,QAChBK,EAAU/D,EAAM+D,QAChBM,EAAMrE,EAAMyD,IACZS,EAAWlE,EAAMkE,SACjBI,EAAa,YAA8BtE,EAAOuD,GAChDgB,EAAU,YAAgB,IAAW5B,EAAW,SAAQe,GAAU,eAAsBI,GAAO,cAAqBF,IAASG,EAAU,SAAW,MAAQ,IAAMH,GAAgBI,GACpL,OAAoB,IAAMzB,cAAc8B,EAAK,YAAS,GAAIC,EAAY,CACpE3B,UAAW4B,EACXC,IAAKN,MAGTxB,EAAKc,UAAYA,EACjBd,EAAK+B,aApBc,CACjBhB,IAAK,OAoBQ","file":"static/js/138.9d5ce55e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport AgoraUIKit from \"agora-react-uikit\";\nimport { useLocation } from \"react-router-dom\";\n\nimport axiosConfig from \"../../axiosConfig\";\n\nimport LayoutOne from \"../../layouts/LayoutOne\";\n\n// import VideoCalls from \"./VideoCalls\";\n\nfunction YourliveStreamone({ props }) {\n  const [videoCall, setVideoCall] = useState(false);\n  const [token, settoken] = useState(\"\");\n  const [channelName, setchannelName] = useState(\"\");\n  const [Token, setToken] = useState(\"\");\n  const [Addcall, setAddcall] = useState(false);\n\n  const location = useLocation();\n\n  const rtcProps = {\n    // Pass your App ID here.\n    appId: \"7d1f07c76f9d46be86bc46a791884023\",\n\n    // enableVideo: false,\n    // dualStreamMode: 0,\n\n    channel: \"data.channelName\",\n    // channel: channelName,\n    // Pass your temp token here.\n    token:\n      \"007eJxTYEg1WKq8YNrZq7Hry+t1pN+/dWLIDZotUv3YuP3lGv0TjsIKDOYphmkG5snmZmmWKSZmSakWZknJJmaJ5paGFhYmBkbGfocSUxoCGRmC7M+xMjJAIIjPzpCYV5qVWpzBwAAAcZYfjg==\",\n    // token: token,\n\n    // role: \"host\",\n    role: \"audience\",\n  };\n  const callbacks = {\n    EndCall: () => {\n      window.location.reload();\n    },\n  };\n\n  // const handleSubmit = (e) => {\n  //   const astroid = localStorage.getItem(\"astroId\");\n\n  //   axiosConfig\n  //     .post(`/user/add_VideoChannel`, {\n  //       astroid: astroid,\n  //       channelName: channelname,\n  //     })\n  //     .then((res) => {\n  //       setchannel(\"\");\n  //       swal(\"Channel Created Successfully\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  // const handlestatus = (e) => {\n  //   e.preventDefault();\n  //   const astroid = localStorage.getItem(\"astroId\");\n\n  //   let payload = {\n  //     astroAccount: astroid,\n  //   };\n  //   if (Status === \"Active\") {\n  //     axiosConfig\n  //       .post(`/user/astroVideoCall`, payload)\n  //       .then((res) => {\n  //         console.log(res.data.astroAccount);\n  //         setToken(res.data.astroAccount);\n  //         localStorage.setItem(\"astrotokenforvideocall\", res.data.astroAccount);\n  //         setAddcall(true);\n\n  //         // setVideoCall(true);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  //   if (Status === \"Deactive\") {\n  //     localStorage.removeItem(\"astrotokenforvideocall\");\n  //     setAddcall(false);\n  //   }\n  // };\n  useEffect(() => {\n    console.log(location.state);\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\n    const astroid = localStorage.getItem(\"astroId\");\n    console.log(astroid);\n    let livetkn = {\n      astroAccount: astroid,\n      userAccount: userId,\n    };\n    axiosConfig\n      .post(`/user/UerLiveStreamingToken`, livetkn)\n      .then((res) => {\n        console.log(res);\n        // settoken(res?.data?.token);\n        // setchannelName(res?.data?.channelName);\n        // console.log(res.data?.token);\n        // console.log(res.data?.channelName);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // axiosConfig\n    //   .get(`user/channelList/${astroid}`)\n    //   .then((res) => {\n    //     console.log(res.data?.data[0]?.channelName);\n    //     setchannelName(res.data?.data[0]?.channelName);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  }, []);\n  return (\n    <div>\n      <LayoutOne headerTop=\"visible\">\n        <Card className=\"mt-1 mb-2\">\n          <Row>\n            <div className=\"container mt-1 mb-1\">\n              <div style={{ display: \"flex\", width: \"100vw\", height: \"80vh\" }}>\n                <AgoraUIKit rtcProps={rtcProps} callbacks={callbacks} />\n              </div>\n            </div>\n          </Row>\n        </Card>\n      </LayoutOne>\n    </div>\n  );\n}\n\nexport default YourliveStreamone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\nvar Card = function Card(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    color = props.color,\n    body = props.body,\n    inverse = props.inverse,\n    outline = props.outline,\n    Tag = props.tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}