{"version":3,"sources":["../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","components/astrology/autosearch.js"],"names":["fn","cache","Object","create","arg","undefined","AutoSearch","React","createElement","className","ReactSearchAutocomplete","items","id","name","onSearch","string","results","console","log","onHover","result","onSelect","item","onFocus","autoFocus","formatResult","Fragment","style","display","textAlign"],"mappings":"oHAOe,IAPf,SAAiBA,GACf,IAAIC,EAAQC,OAAOC,OAAO,MAC1B,OAAO,SAAUC,GAEf,YADmBC,IAAfJ,EAAMG,KAAoBH,EAAMG,GAAOJ,EAAGI,IACvCH,EAAMG,M,iCCJjB,oCAgFeE,UA7Ef,WA0DE,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAACE,0BAAuB,CACtBC,MA7DI,CACZ,CACEC,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,cAER,CACED,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,OAER,CACED,GAAI,EACJC,KAAM,SA2CAC,SAvCa,SAACC,EAAQC,GAG9BC,QAAQC,IAAIH,EAAQC,IAqCZG,QAlCY,SAACC,GAErBH,QAAQC,IAAIE,IAiCJC,SA9Ba,SAACC,GAEtBL,QAAQC,IAAII,IA6BJC,QA1BY,WACpBN,QAAQC,IAAI,YA0BJM,WAAS,EACTC,aAxBW,SAACH,GACpB,OACEf,IAAAC,cAAAD,IAAAmB,SAAA,KACEnB,IAAAC,cAAA,QAAMmB,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAU,OAC/CP,EAAKV,IAEZL,IAAAC,cAAA,QAAMmB,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAU,SAC7CP,EAAKT","file":"static/js/140.c8efeb54.chunk.js","sourcesContent":["function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nexport default memoize;","import React from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction AutoSearch() {\n  // note: the id field is mandatory\n  const items = [\n    {\n      id: 0,\n      name: \"Cobol\",\n    },\n    {\n      id: 1,\n      name: \"JavaScript\",\n    },\n    {\n      id: 2,\n      name: \"Basic\",\n    },\n    {\n      id: 3,\n      name: \"PHP\",\n    },\n    {\n      id: 4,\n      name: \"Java\",\n    },\n  ];\n\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    console.log(string, results);\n  };\n\n  const handleOnHover = (result) => {\n    // the item hovered\n    console.log(result);\n  };\n\n  const handleOnSelect = (item) => {\n    // the item selected\n    console.log(item);\n  };\n\n  const handleOnFocus = () => {\n    console.log(\"Focused\");\n  };\n\n  const formatResult = (item) => {\n    return (\n      <>\n        <span style={{ display: \"block\", textAlign: \"left\" }}>\n          id: {item.id}\n        </span>\n        <span style={{ display: \"block\", textAlign: \"left\" }}>\n          name: {item.name}\n        </span>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"st-search\">\n          <ReactSearchAutocomplete\n            items={items}\n            onSearch={handleOnSearch}\n            onHover={handleOnHover}\n            onSelect={handleOnSelect}\n            onFocus={handleOnFocus}\n            autoFocus\n            formatResult={formatResult}\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default AutoSearch;\n"],"sourceRoot":""}