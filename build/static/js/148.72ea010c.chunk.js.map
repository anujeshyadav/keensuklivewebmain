{"version":3,"sources":["pages/other/MyPoojabooking.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["i","connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","pathname","location","useState","order","setOrder","fetchOrder","userid","JSON","parse","localStorage","getItem","axiosConfig","get","data","console","log","useEffect","to","process","headerTop","className","length","map","orders","key","orderId","width","height","src","pujaId","poojaimg","alt","pooja_type","pooja_name","createdAt","split","pooja_price","slots","address","status","onClick","_id","then","res","catch","err","style","color","Breadcrumb","separator","NavLink","finalItem"],"mappings":"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","file":"static/js/148.72ea010c.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\n\r\nconst MyOrder = ({ location }) => {\r\n  const { pathname } = location;\r\n  const [order, setOrder] = useState([]);\r\n  const fetchOrder = async () => {\r\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    const { data } = await axiosConfig.get(\r\n      `/user/userBookedPujalist/${userid}`\r\n    );\r\n    // const { data } = await axiosConfig.get(\r\n    //   `/user/userBookedPujalist/${userid}`\r\n    // );\r\n    const order = data.data;\r\n    setOrder(order);\r\n    console.log(order);\r\n  };\r\n\r\n  const handleDelete = (data) => {\r\n    console.log(data?._id);\r\n    axiosConfig\r\n      .get(`/admin/dltBookedPuja/${data?._id}`)\r\n      .then((res) => {\r\n        fetchOrder();\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user_id\")) {\r\n      fetchOrder();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        My booked pooja\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        <Breadcrumb />\r\n        <div className=\"cart-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {order && order.length >= 1 ? (\r\n              <Fragment>\r\n                <h3 className=\"cart-page-title\">My pooja Items</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-content table-responsive cart-table-content\">\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ORDER ID</th>\r\n                            <th>Image</th>\r\n                            <th>Product Name</th>\r\n                            <th>Date of Pooja</th>\r\n                            <th>Purchasing Date</th>\r\n\r\n                            <th>AMOUNT</th>\r\n\r\n                            <th>Slot</th>\r\n                            <th>Address</th>\r\n                            <th>Status</th>\r\n                            <th>Delete</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {order?.map((orders, key) => {\r\n                            return (\r\n                              <tr key={key}>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\">\r\n                                    {orders?.orderId}\r\n                                  </span>\r\n                                </td>\r\n                                <td className=\"product-thumbnail\">\r\n                                  <Link to=\"#\">\r\n                                    <img\r\n                                      width=\"80px\"\r\n                                      height=\"80px\"\r\n                                      className=\"img-fluid\"\r\n                                      src={orders?.pujaId?.poojaimg}\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-name text-center\">\r\n                                  <Link>\r\n                                    {orders?.pujaId?.pooja_type?.pooja_name}\r\n                                  </Link>\r\n                                  <br />\r\n                                  {/* <p>by:-{orders?.astroid?.fullname}</p> */}\r\n                                  {/* {orders?.product?.product?.qsCount ? (\r\n                                    <>\r\n                                      Question Count:{\" \"}\r\n                                      {orders?.product?.product?.qsCount}\r\n                                    </>\r\n                                  ) : null} */}\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.createdAt?.split(\"T\")[0]}\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.createdAt?.split(\"T\")[0]}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.pujaId?.pooja_price}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.slots}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.address}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span className=\"amount\"></span>\r\n                                  {orders?.status}\r\n                                </td>\r\n                                <td className=\"product-price-cart\">\r\n                                  <span\r\n                                    onClick={() => handleDelete(order)}\r\n                                    style={{ color: \"Red\" }}\r\n                                    className=\"amount\"\r\n                                  >\r\n                                    Delete\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-cart\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      No Product Found <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/astromallList\"}>\r\n                        Shop Now\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMyOrder.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteAllFromWishlist: PropTypes.func,\r\n  deleteFromWishlist: PropTypes.func,\r\n  wishlistItems: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    currency: state.currencyData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    addToWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(addToWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteFromWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteAllFromWishlist: (addToast) => {\r\n      dispatch(deleteAllFromWishlist(addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrder);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}