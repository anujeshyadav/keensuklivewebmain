{"version":3,"sources":["assets/img/note.png","components/astrology/NotificationList.js"],"names":["module","exports","NotificationList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","componentDidMount","userId","JSON","parse","localStorage","getItem","axiosConfig","get","concat","then","response","console","log","data","status","setState","notification","catch","error","notificationDelete","id","swal","window","location","reload","state","_createClass","key","value","_this2","this","React","createElement","LayoutOne","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","Container","Row","Col","md","lg","length","map","notif","index","src","noteimg","alt","title","ReactHtmlParser","desc","onClick","_id","class","aria-hidden","Component"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,kC,8NCmBrCC,EAAgB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACpB,SAAAA,IAAe,IAADK,EAIV,OAJUC,YAAA,KAAAN,IACZK,EAAAF,EAAAI,KAAA,OAMFC,kBAAoB,WAClB,IAAIC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,YAE7CC,IACGC,IAAI,2BAADC,OAA4BP,IAC/BQ,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,OACQ,IAAzBH,EAASG,KAAKC,QAChBjB,EAAKkB,SAAS,CAAEC,aAAcN,EAASG,KAAKA,UAG/CI,OAAM,SAACC,GACNP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAMR,cAEvBb,EACDsB,mBAAqB,SAACC,GACpBd,IACGC,IAAI,2BAA6Ba,GACjCX,MAAK,SAACC,GACLC,QAAQC,IAAI,QAASF,EAASG,KAAKA,MACnCQ,IAAK,WAAY,+BAAgC,WACjDC,OAAOC,SAASC,QAAO,MAGxBP,OAAM,SAACC,GACNG,IAAK,SAAU,0BAA2B,SAC1CV,QAAQC,IAAIM,OAhChBrB,EAAK4B,MAAQ,CACXT,aAAc,IACdnB,EAsHH,OArHA6B,YAAAlC,EAAA,EAAAmC,IAAA,SAAAC,MAgCD,WAAU,IAADC,EAAA,KACCb,EAAiBc,KAAKL,MAAtBT,aAER,OACEe,IAAAC,cAACC,IAAS,CAACC,UAAU,WACnBH,IAAAC,cAAA,WAASG,UAAU,aACjBJ,IAAAC,cAAA,OACEG,UAAU,GACVC,MAAO,CAKLC,MAAO,OACPC,MAAO,OACPC,gBAAiB,UACjBC,SAAU,WACVC,qBAAsB,QACtBC,eAAgB,QAChBC,MAAO,UACPC,QAAS,qBACTC,gBAAgB,OAADrC,OAASsC,IAAY,KACpCC,mBAAoB,gBACpBC,iBAAkB,aAClBC,UAAW,WAGblB,IAAAC,cAACkB,IAAS,KACRnB,IAAAC,cAACmB,IAAG,KACFpB,IAAAC,cAACoB,IAAG,CAACC,GAAG,MACNtB,IAAAC,cAAA,OAAKG,UAAU,sBACbJ,IAAAC,cAAA,UAAI,sBAOhBD,IAAAC,cAAA,eACED,IAAAC,cAACkB,IAAS,CAACf,UAAU,QACnBJ,IAAAC,cAACmB,IAAG,KACFpB,IAAAC,cAACoB,IAAG,CAACE,GAAG,MACNvB,IAAAC,cAAA,OAAKG,UAAU,aACbJ,IAAAC,cAACkB,IAAS,KACRnB,IAAAC,cAACmB,IAAG,KACDnC,EAAauC,OACVvC,EAAawC,KAAI,SAACC,EAAOC,GACvB,OACE3B,IAAAC,cAACoB,IAAG,CAACE,GAAG,KAAK3B,IAAK+B,GAChB3B,IAAAC,cAAA,OAAKG,UAAU,gBACbJ,IAAAC,cAAA,OAAKG,UAAU,aACbJ,IAAAC,cAAA,OAAK2B,IAAKC,IAASC,IAAI,GAAGvB,MAAM,UAElCP,IAAAC,cAAA,OAAKG,UAAU,cACbJ,IAAAC,cAAA,UAAKyB,EAAMK,OACX/B,IAAAC,cAAA,SAAI+B,IAAgBN,EAAMO,OAC1BjC,IAAAC,cAAA,QAAMG,UAAU,aACdJ,IAAAC,cAAA,UACEiC,QAAS,kBACPpC,EAAKV,mBAAmBsC,EAAMS,IAA9BrC,CACEP,OAAOC,SAASC,YAIpBO,IAAAC,cAAA,KACEmC,MAAM,cACNC,cAAY,iBAS5B,iBAUvB5E,EA3HmB,CAASuC,IAAMsC,WA8HtB7E,a","file":"static/js/85.92d8d16c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/note.37f263df.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  Form,\n  Button,\n} from \"reactstrap\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport \"../../assets/scss/astroteam.scss\";\nimport noteimg from \"../../assets/img/note.png\";\nimport axiosConfig from \"../../axiosConfig\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport swal from \"sweetalert\";\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\n\nclass NotificationList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      notification: [],\n    };\n  }\n\n  componentDidMount = () => {\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\n\n    axiosConfig\n      .get(`/admin/get_notification/${userId}`)\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.status === true) {\n          this.setState({ notification: response.data.data });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(error.response);\n      });\n  };\n  notificationDelete = (id) => {\n    axiosConfig\n      .get(\"/admin/dlt_notification/\" + id)\n      .then((response) => {\n        console.log(\"@@@@@\", response.data.data);\n        swal(\"Success!\", \"Address SuccessFull! Deleted\", \"success\");\n        window.location.reload(true);\n      })\n\n      .catch((error) => {\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\n        console.log(error);\n      });\n  };\n  render() {\n    const { notification } = this.state;\n\n    return (\n      <LayoutOne headerTop=\"visible\">\n        <section className=\"pt-0 pb-0\">\n          <div\n            className=\"\"\n            style={{\n              // backgroundColor: \"#FFD59E\",\n              // width: \"100%\",\n              // padding: \"70px 0px\",\n              // backgroundSize: \"cover\",\n              float: \"left\",\n              width: \"100%\",\n              backgroundColor: \"#272727\",\n              position: \"relative\",\n              backgroundAttachment: \"fixed\",\n              backgroundSize: \"cover\",\n              color: \"#ffffff\",\n              padding: \" 50px 0px 50px 0px\",\n              backgroundImage: `url(${astrologinbg})`,\n              backgroundPosition: \"center center\",\n              backgroundRepeat: \" no-repeat\",\n              textAlign: \"center\",\n            }}\n          >\n            <Container>\n              <Row>\n                <Col md=\"12\">\n                  <div className=\"leftcont text-left\">\n                    <h1>Notification</h1>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n        <section>\n          <Container className=\"mt-9\">\n            <Row>\n              <Col lg=\"12\">\n                <div className=\"notes-box\">\n                  <Container>\n                    <Row>\n                      {notification.length\n                        ? notification.map((notif, index) => {\n                            return (\n                              <Col lg=\"12\" key={index}>\n                                <div className=\"noteify-list\">\n                                  <div className=\"noteifybx\">\n                                    <img src={noteimg} alt=\"\" width=\"50px\" />\n                                  </div>\n                                  <div className=\"noteifybxx\">\n                                    <h2>{notif.title}</h2>\n                                    <p>{ReactHtmlParser(notif.desc)}</p>\n                                    <span className=\"notify-sp\">\n                                      <button\n                                        onClick={() =>\n                                          this.notificationDelete(notif._id)(\n                                            window.location.reload()\n                                          )\n                                        }\n                                      >\n                                        <i\n                                          class=\"fa fa-times\"\n                                          aria-hidden=\"true\"\n                                        ></i>\n                                      </button>\n                                    </span>\n                                  </div>\n                                </div>\n                              </Col>\n                            );\n                          })\n                        : null}\n                    </Row>\n                  </Container>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n      </LayoutOne>\n    );\n  }\n}\n\nexport default NotificationList;\n"],"sourceRoot":""}